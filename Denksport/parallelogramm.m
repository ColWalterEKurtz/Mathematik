clear all;

printf("\\begin{exercise}\n");
printf("      {ID-11355ef27a46bdeef9e283bbbd480a94e14eb326}\n");
printf("      {Parallelogramm}\n");
printf("  \\ifproblem\\problem\n");
printf("    Gegeben sei ein beliebiges (konvexes) Viereck. Zerschneide es so in vier\n");
printf("    kleinere Vierecke, dass man daraus ein (gleich großes) Parallelogramm legen\n");
printf("    kann.\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\n");
printf("    Man muss das Viereck von der Mitte einer Seite zur Mitte der\n");
printf("    gegenüberliegenden Seite zerschneiden:\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}[scale=0.5]\n");
printf("        \\begin{scope}\n");
printf("          \\coordinate (A)   at (-3.0000, -1.0000);\n");
printf("          \\coordinate (B)   at ( 3.0000, -3.0000);\n");
printf("          \\coordinate (C)   at ( 2.0000,  2.0000);\n");
printf("          \\coordinate (D)   at (-1.0000,  2.0000);\n");
printf("          \\coordinate (M1)  at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M2)  at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M3)  at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M4)  at (-2.0000,  0.5000);\n");
printf("          \\coordinate (M)   at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MA)  at (-1.1875, -0.6250);\n");
printf("          \\coordinate (MB)  at ( 1.4375, -1.3750);\n");
printf("          \\coordinate (MC)  at ( 1.3125,  0.8750);\n");
printf("          \\coordinate (MD)  at (-0.5625,  1.1250);\n");
printf("          \\coordinate (MMA) at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MMB) at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MMC) at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MMD) at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (M1A) at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M1B) at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M2B) at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M2C) at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M3C) at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M3D) at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M4D) at (-2.0000,  0.5000);\n");
printf("          \\coordinate (M4A) at (-2.0000,  0.5000);\n");
printf("          \\draw (A) -- (B) -- (C) -- (D) -- cycle;\n");
printf("          \\draw (M1) -- (M3) (M2) -- (M4);\n");
printf("          \\fill (M)  circle[radius=1pt];\n");
printf("          \\node at (MA) {$A$};\n");
printf("          \\node at (MB) {$B$};\n");
printf("          \\node at (MC) {$C$};\n");
printf("          \\node at (MD) {$D$};\n");
printf("        \\end{scope}\n");
printf("        \\begin{scope}[xshift=7cm]\n");
printf("          \\coordinate (A)   at (-3.2500, -1.2500);\n");
printf("          \\coordinate (B)   at ( 3.2500, -3.2500);\n");
printf("          \\coordinate (C)   at ( 2.2500,  2.2500);\n");
printf("          \\coordinate (D)   at (-1.2500,  2.2500);\n");
printf("          \\coordinate (M1)  at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M2)  at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M3)  at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M4)  at (-2.0000,  0.5000);\n");
printf("          \\coordinate (M)   at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MA)  at (-1.4375, -0.8750);\n");
printf("          \\coordinate (MB)  at ( 1.6875, -1.6250);\n");
printf("          \\coordinate (MC)  at ( 1.5625,  1.1250);\n");
printf("          \\coordinate (MD)  at (-0.8125,  1.3750);\n");
printf("          \\coordinate (MMA) at ( 0.0000, -0.2500);\n");
printf("          \\coordinate (MMB) at ( 0.5000, -0.2500);\n");
printf("          \\coordinate (MMC) at ( 0.5000,  0.2500);\n");
printf("          \\coordinate (MMD) at ( 0.0000,  0.2500);\n");
printf("          \\coordinate (M1A) at (-0.2500, -2.2500);\n");
printf("          \\coordinate (M1B) at ( 0.2500, -2.2500);\n");
printf("          \\coordinate (M2B) at ( 2.7500, -0.7500);\n");
printf("          \\coordinate (M2C) at ( 2.7500, -0.2500);\n");
printf("          \\coordinate (M3C) at ( 0.7500,  2.2500);\n");
printf("          \\coordinate (M3D) at ( 0.2500,  2.2500);\n");
printf("          \\coordinate (M4D) at (-2.2500,  0.7500);\n");
printf("          \\coordinate (M4A) at (-2.2500,  0.2500);\n");
printf("          \\draw (A) -- (M1A) -- (MMA) -- (M4A) -- cycle;\n");
printf("          \\draw (B) -- (M2B) -- (MMB) -- (M1B) -- cycle;\n");
printf("          \\draw (C) -- (M3C) -- (MMC) -- (M2C) -- cycle;\n");
printf("          \\draw (D) -- (M4D) -- (MMD) -- (M3D) -- cycle;\n");
printf("          \\node at (MA) {$\\curvearrowleft$};\n");
printf("          \\node at (MB) {$\\curvearrowright$};\n");
printf("          \\node[rotate=180] at (MC) {$\\curvearrowleft$};\n");
printf("          \\node[rotate=180] at (MD) {$\\curvearrowright$};\n");
printf("        \\end{scope}\n");
printf("        \\begin{scope}[xshift=14cm]\n");
printf("          \\coordinate (A)   at (-1.0000, -3.7500);\n");
printf("          \\coordinate (B)   at (-1.0000, -3.7500);\n");
printf("          \\coordinate (C)   at ( 0.5000,  1.5000);\n");
printf("          \\coordinate (D)   at ( 0.5000,  1.5000);\n");
printf("          \\coordinate (M1)  at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M2)  at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M3)  at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M4)  at (-2.0000,  0.5000);\n");
printf("          \\coordinate (M)   at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MA)  at (-1.3750, -1.9375);\n");
printf("          \\coordinate (MB)  at ( 0.6250, -2.1875);\n");
printf("          \\coordinate (MC)  at ( 1.6250,  0.8125);\n");
printf("          \\coordinate (MD)  at (-0.3750,  1.0625);\n");
printf("          \\coordinate (MMA) at (-2.0000, -0.5000);\n");
printf("          \\coordinate (MMB) at ( 2.0000, -1.0000);\n");
printf("          \\coordinate (MMC) at ( 2.5000, -0.2500);\n");
printf("          \\coordinate (MMD) at (-1.5000,  0.2500);\n");
printf("          \\coordinate (M1A) at ( 0.0000, -0.7500);\n");
printf("          \\coordinate (M1B) at ( 0.0000, -0.7500);\n");
printf("          \\coordinate (M2B) at ( 1.5000, -3.2500);\n");
printf("          \\coordinate (M2C) at ( 3.0000,  2.0000);\n");
printf("          \\coordinate (M3C) at ( 0.5000,  0.0000);\n");
printf("          \\coordinate (M3D) at ( 0.5000,  0.0000);\n");
printf("          \\coordinate (M4D) at (-1.0000,  2.5000);\n");
printf("          \\coordinate (M4A) at (-2.5000, -2.7500);\n");
printf("          \\draw (A) -- (M1A) -- (MMA) -- (M4A) -- cycle;\n");
printf("          \\draw (B) -- (M2B) -- (MMB) -- (M1B) -- cycle;\n");
printf("          \\draw (C) -- (M3C) -- (MMC) -- (M2C) -- cycle;\n");
printf("          \\draw (D) -- (M4D) -- (MMD) -- (M3D) -- cycle;\n");
printf("          \\node at (MA) {$A$};\n");
printf("          \\node at (MB) {$B$};\n");
printf("          \\node at (MC) {$C$};\n");
printf("          \\node at (MD) {$D$};\n");
printf("        \\end{scope}\n");
printf("        \\begin{scope}[xshift=21cm]\n");
printf("          \\coordinate (A)   at (-1.2500, -1.5000);\n");
printf("          \\coordinate (B)   at (-1.2500, -1.5000);\n");
printf("          \\coordinate (C)   at (-1.2500, -1.5000);\n");
printf("          \\coordinate (D)   at (-1.2500, -1.5000);\n");
printf("          \\coordinate (M1)  at ( 0.0000, -2.0000);\n");
printf("          \\coordinate (M2)  at ( 2.5000, -0.5000);\n");
printf("          \\coordinate (M3)  at ( 0.5000,  2.0000);\n");
printf("          \\coordinate (M4)  at (-2.0000,  0.5000);\n");
printf("          \\coordinate (M)   at ( 0.2500,  0.0000);\n");
printf("          \\coordinate (MA)  at (-1.6250,  0.3125);\n");
printf("          \\coordinate (MB)  at ( 0.3750,  0.0625);\n");
printf("          \\coordinate (MC)  at (-0.1250, -2.1875);\n");
printf("          \\coordinate (MD)  at (-2.1250, -1.9375);\n");
printf("          \\coordinate (MMA) at (-2.2500,  1.7500);\n");
printf("          \\coordinate (MMB) at ( 1.7500,  1.2500);\n");
printf("          \\coordinate (MMC) at ( 0.7500, -3.2500);\n");
printf("          \\coordinate (MMD) at (-3.2500, -2.7500);\n");
printf("          \\coordinate (M1A) at (-0.2500,  1.5000);\n");
printf("          \\coordinate (M1B) at (-0.2500,  1.5000);\n");
printf("          \\coordinate (M2B) at ( 1.2500, -1.0000);\n");
printf("          \\coordinate (M2C) at ( 1.2500, -1.0000);\n");
printf("          \\coordinate (M3C) at (-1.2500, -3.0000);\n");
printf("          \\coordinate (M3D) at (-1.2500, -3.0000);\n");
printf("          \\coordinate (M4D) at (-2.7500, -0.5000);\n");
printf("          \\coordinate (M4A) at (-2.7500, -0.5000);\n");
printf("          \\draw (A) -- (M1A) -- (MMA) -- (M4A) -- cycle;\n");
printf("          \\draw (B) -- (M2B) -- (MMB) -- (M1B) -- cycle;\n");
printf("          \\draw (C) -- (M3C) -- (MMC) -- (M2C) -- cycle;\n");
printf("          \\draw (D) -- (M4D) -- (MMD) -- (M3D) -- cycle;\n");
printf("          \\node at (MA) {$A$};\n");
printf("          \\node at (MB) {$B$};\n");
printf("          \\node at (MC) {$C$};\n");
printf("          \\node at (MD) {$D$};\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

