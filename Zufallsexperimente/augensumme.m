clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-51caed6448753cf4de9bf791661089e31e3c6b27}\n");
printf("      {Augensumme}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Wie groß ist die Wahrscheinlichkeit, mit zwei Würfeln die Augensumme 5\n");
printf("    zu würfeln?\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\\par\n");
printf("    %% <OUTCOME>\n");
printf("    Um Platz beim Zeichnen des Baumdiagramms zu sparen,\n");
printf("    werden irrelevente Resultate unter dem Buchstaben\n");
printf("    \\glqq R\\grqq{} (\\glqq Rest\\grqq) zusammengefasst.\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}\n");
printf("        %% tree\n");
printf("        \\begin{scope}[line width=0.6pt]\n");
printf("          %% size settings\n");
printf("          \\newcommand{\\radius}{3mm}%%\n");
printf("          \\newcommand{\\xscale}{3}%%\n");
printf("          \\newcommand{\\yscale}{4}%%\n");
printf("          %% geometry\n");
printf("          \\coordinate (Z)  at ( 4.500*\\xscale*\\radius,  2.800*\\yscale*\\radius);\n");
printf("          \\coordinate (A)  at ( 0.500*\\xscale*\\radius,  1.000*\\yscale*\\radius);\n");
printf("          \\coordinate (B)  at ( 2.500*\\xscale*\\radius,  1.000*\\yscale*\\radius);\n");
printf("          \\coordinate (C)  at ( 4.500*\\xscale*\\radius,  1.000*\\yscale*\\radius);\n");
printf("          \\coordinate (D)  at ( 6.500*\\xscale*\\radius,  1.000*\\yscale*\\radius);\n");
printf("          \\coordinate (E)  at ( 8.500*\\xscale*\\radius,  1.000*\\yscale*\\radius);\n");
printf("          \\coordinate (AA) at ( 0.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (AB) at ( 1.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (BA) at ( 2.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (BB) at ( 3.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (CA) at ( 4.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (CB) at ( 5.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (DA) at ( 6.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (DB) at ( 7.000*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          \\coordinate (EA) at ( 8.500*\\xscale*\\radius,  0.000*\\yscale*\\radius);\n");
printf("          %% edges\n");
printf("          \\draw (Z) -- (A);\n");
printf("          \\draw (Z) -- (B);\n");
printf("          \\draw (Z) -- (C);\n");
printf("          \\draw (Z) -- (D);\n");
printf("          \\draw (Z) -- (E);\n");
printf("          \\draw (A) -- (AA);\n");
printf("          \\draw (A) -- (AB);\n");
printf("          \\draw (B) -- (BA);\n");
printf("          \\draw (B) -- (BB);\n");
printf("          \\draw (C) -- (CA);\n");
printf("          \\draw (C) -- (CB);\n");
printf("          \\draw (D) -- (DA);\n");
printf("          \\draw (D) -- (DB);\n");
printf("          \\draw (E) -- (EA);\n");
printf("          %% root\n");
printf("          \\fill[fill=black] (Z) circle[radius=2pt];\n");
printf("          %% nodes\n");
printf("          \\begin{scope}[fill=white, draw=black]\n");
printf("            \\filldraw (A)  circle[radius=\\radius] node{1};\n");
printf("            \\filldraw (B)  circle[radius=\\radius] node{2};\n");
printf("            \\filldraw (C)  circle[radius=\\radius] node{3};\n");
printf("            \\filldraw (D)  circle[radius=\\radius] node{4};\n");
printf("            \\filldraw (E)  circle[radius=\\radius] node{R};\n");
printf("            \\filldraw (AA) circle[radius=\\radius] node{4};\n");
printf("            \\filldraw (AB) circle[radius=\\radius] node{R};\n");
printf("            \\filldraw (BA) circle[radius=\\radius] node{3};\n");
printf("            \\filldraw (BB) circle[radius=\\radius] node{R};\n");
printf("            \\filldraw (CA) circle[radius=\\radius] node{2};\n");
printf("            \\filldraw (CB) circle[radius=\\radius] node{R};\n");
printf("            \\filldraw (DA) circle[radius=\\radius] node{1};\n");
printf("            \\filldraw (DB) circle[radius=\\radius] node{R};\n");
printf("            \\filldraw (EA) circle[radius=\\radius] node{R};\n");
printf("          \\end{scope}\n");
printf("          %% label macros\n");
printf("          \\newcommand{\\rlabel}[5][0.5]%%\n");
printf("          {%%\n");
printf("            \\coordinate (TEMP) at ($(#2)!#1!(#3)$);\n");
printf("            \\coordinate (TEMP) at ($(TEMP)!#4!270:(#3)$);\n");
printf("            \\node at (TEMP) {#5};\n");
printf("          }%%\n");
printf("          %% edge labels\n");
printf("          \\rlabel     {Z}{A}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel[0.7]{Z}{B}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel[0.6]{Z}{C}{-2mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel[0.7]{Z}{D}{-3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel     {Z}{E}{-3mm}{$\\frac{2}{6}$};\n");
printf("          \\rlabel{A}{AA}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel{A}{AB}{-3mm}{$\\frac{5}{6}$};\n");
printf("          \\rlabel{B}{BA}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel{B}{BB}{-3mm}{$\\frac{5}{6}$};\n");
printf("          \\rlabel{C}{CA}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel{C}{CB}{-3mm}{$\\frac{5}{6}$};\n");
printf("          \\rlabel{D}{DA}{ 3mm}{$\\frac{1}{6}$};\n");
printf("          \\rlabel{D}{DB}{-3mm}{$\\frac{5}{6}$};\n");
printf("          \\rlabel{E}{EA}{-2mm}{$\\frac{6}{6}$};\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("    Es müssen also vier Pfadwahrscheinlichkeiten\n");
printf("    mit der Pfadregel (Produktregel) berechnet\n");
printf("    und anschließend mit der Summenregel\n");
printf("    zusammengefasst werden:\n");
printf("    \\begin{equation*}\n");
printf("      \\begin{split}\n");
printf("        E&=\\text{\\glqq Augensumme 5\\grqq}\n");
printf("        =\n");
printf("        \\{(1;4);(2;3);(3;2);(4;1)\\}\n");
printf("        \\\\[1ex]\n");
printf("        P(E)&=\n");
printf("        \\frac{1}{6}\\cdot\\frac{1}{6}\n");
printf("        +\n");
printf("        \\frac{1}{6}\\cdot\\frac{1}{6}\n");
printf("        +\n");
printf("        \\frac{1}{6}\\cdot\\frac{1}{6}\n");
printf("        +\n");
printf("        \\frac{1}{6}\\cdot\\frac{1}{6}\n");
printf("        =\n");
printf("        \\frac{4}{36}\n");
printf("        =\n");
printf("        \\frac{1}{9}\n");
printf("        \\approx\n");
printf("        \\num{0.111}\n");
printf("        \\approx\n");
printf("        \\pc{11}\n");
printf("      \\end{split}\n");
printf("    \\end{equation*}\n");
printf("    Die Wahrscheinlichkeit mit zwei Würfeln die\n");
printf("    Augensumme 5 zu würfeln liegt bei ca. \\pc{11}.\n");
printf("    %% </OUTCOME>\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

