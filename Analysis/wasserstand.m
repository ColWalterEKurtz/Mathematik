clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-ec09c5c5590a099daaa9d9e0ae2b1eb3136b2453}\n");
printf("      {Wasserstand}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Der Wasserstand eines Flusses wird\n");
printf("    kontinuierlich an Pegellatten abgelesen\n");
printf("    und in Zentimetern über Pegelnull\n");
printf("    (cm ü PN) angegeben.\n");
printf("    \\par\n");
printf("    Nach einer längeren Trockenperiode,\n");
printf("    in welcher der Wasserstand unter\n");
printf("    den Pegelnullpunkt gesunken ist,\n");
printf("    sorgten starke Regenfälle am\n");
printf("    Tage für einen Kurzfristigen\n");
printf("    Anstieg des Pegelstandes des Flusses.\n");
printf("    Über einen Zeitraum von 0 bis 24 Uhr\n");
printf("    soll der Pegelstand $f$ in Abhängigkeit\n");
printf("    von der Zeit $x$ ausgewertet werden.\n");
printf("    Der Pegelstand $f$ kann näherungsweise\n");
printf("    durch die Funktion $f$ mit\n");
printf("    \\begin{equation*}\n");
printf("      f(x)=-\\num{0.5}x^4+\\num{3}x^2-\\num{1}\n");
printf("      \\quad,\\quad\n");
printf("      x\\in\\mathbb{R}\n");
printf("      \\quad,\\quad\n");
printf("      0\\leq x\\leq\\num{2.4}\n");
printf("    \\end{equation*}\n");
printf("    dargestellt werden. Der Graph $G_f$ ist in der\n");
printf("    Skizze veranschaulicht. Eine Einheit auf der\n");
printf("    $y$-Achse entspricht \\SI{10}{\\centi\\metre} und\n");
printf("    eine Einheit auf der $x$-Achse entspricht\n");
printf("    10 Stunden.\n");
printf("    \\begin{center}\n");
printf("      %%<OCTAVE>\n");
printf("      \\begin{tikzpicture}[scale=0.500]\n");
printf("        %% grid\n");
printf("        %%\\draw[draw=black!50!white] (0.000, -2.000) grid[step=0.5] (13.000, 5.000);\n");
printf("        %% x-axis\n");
printf("        \\draw[line width=0.6pt, ->, >=stealth] (0.000, 0) -- (13.000, 0) node[below left] {\\small$x$};\n");
printf("        %% y-axis\n");
printf("        \\draw[line width=0.6pt, ->, >=stealth] (0, -2.000) -- (0, 5.000) node[below left] {\\small$y$};\n");
printf("        \\begin{scope}[xscale=5]\n");
printf("          %% function: f(x)=-\\num{0.5}x^{4}+\\num{3}x^{2}-\\num{1}\n");
printf("          \\begin{scope}[line width=0.7pt]\n");
printf("            \\clip (0.000, -2.000) rectangle (2.400, 5.000);\n");
printf("            \\draw plot[smooth] coordinates\n");
printf("            {\n");
printf("              (  0.000,  -1.000) (  0.100,  -0.970) (  0.200,  -0.881)\n");
printf("              (  0.300,  -0.734) (  0.400,  -0.533) (  0.500,  -0.281)\n");
printf("              (  0.600,   0.015) (  0.700,   0.350) (  0.800,   0.715)\n");
printf("              (  0.900,   1.102) (  1.000,   1.500) (  1.100,   1.898)\n");
printf("              (  1.200,   2.283) (  1.300,   2.642) (  1.400,   2.959)\n");
printf("              (  1.500,   3.219) (  1.600,   3.403) (  1.700,   3.494)\n");
printf("              (  1.800,   3.471) (  1.900,   3.314) (  2.000,   3.000)\n");
printf("              (  2.100,   2.506) (  2.200,   1.807) (  2.300,   0.878)\n");
printf("              (  2.400,  -0.309)\n");
printf("            };\n");
printf("          \\end{scope}\n");
printf("        \\end{scope}\n");
printf("        %% x labels\n");
printf("        \\draw[line width=0.6pt] (5, 2mm) -- (5, -2mm) node[below]{1\\makebox[0pt][l]{~(10 Uhr)}};\n");
printf("        %% y labels\n");
printf("        \\draw[line width=0.6pt] (2mm,  1) -- (-2mm,  1) node[left]{1};\n");
printf("        \\draw[line width=0.6pt] (2mm,  0) -- (-2mm,  0) node[left]{0};\n");
printf("        \\draw[line width=0.6pt] (2mm, -1) -- (-2mm, -1) node[left]{-1};\n");
printf("        \\node[left] at (-1.5,  1) {$+\\SI{10}{\\centi\\metre}$};\n");
printf("        \\node[left] at (-1.5,  0) {Pegelnull};\n");
printf("        \\node[left] at (-1.5, -1) {$-\\SI{10}{\\centi\\metre}$};\n");
printf("      \\end{tikzpicture}\n");
printf("      %%</OCTAVE>\n");
printf("      %%p = [-0.5 0 3 0 -1];\n");
printf("      %%mypolyplot(p, 0, 2.4, -2, 5, 0.1, 0.5)\n");
printf("    \\end{center}\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      %%\\setlength{\\itemsep}{-1ex}%%\n");
printf("      \\item Weisen Sie rechnerisch nach, dass die Punkte\n");
printf("            $P_1\\left(\\num{0.7}\\;\\middle|\\;\\num{0.35}\\right)$ und\n");
printf("            $P_2\\left(\\num{1.6}\\;\\middle|\\;\\num{3.40}\\right)$\n");
printf("            zum Graphen der Funktion $f$ gehören, der die\n");
printf("            Pegelstände des Flusses zu bestimmten Zeiten\n");
printf("            beschreibt und geben Sie die dazugehörigen Uhrzeiten an.\n");
printf("            \\par\n");
printf("            Berechnen Sie den Pegelstand zu Beginn der Messung\n");
printf("            und zeigen Sie rechnerisch, dass es sich um einen\n");
printf("            lokalen Tiefpunkt von $G_f$ handelt.\n");
printf("      \\item Ermitteln Sie die Gesamtdauer der Zeit, in\n");
printf("            welcher der Pegelstand über dem Pegelnullpunkt lag.\n");
printf("      \\item Geben Sie den Pegelstand um 20 Uhr an und ermitteln\n");
printf("            Sie rechnerisch in cm je Stunde, wie stark der\n");
printf("            Pegelstand zu diesem Zeitpunkt steigt bzw. fällt.\n");
printf("      \\item Berechnen Sie den Zeitpunkt, an dem der Pegelstand\n");
printf("            am höchsten war und geben Sie den Pegelstand an.\n");
printf("      \\item Bestimmen Sie die Koordinaten des Wendepunktes von\n");
printf("            $G_f$ und erläutern Sie die Bedeutung dieses\n");
printf("            Wendepunktes in Hinblick auf die Tendenz des\n");
printf("            Pegelstandes.\n");
printf("    \\end{enumerate}\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  %%\\ifoutcome\\outcome\\par\n");
printf("    %% <OUTCOME>\n");
printf("    %% </OUTCOME>\n");
printf("  %%\\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

