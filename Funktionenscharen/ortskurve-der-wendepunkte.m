clear all;

addpath 'Octave/';

% --
% sd
% --
%
% string decimal
%
% x       number to convert
% opt(1)  maxdcp
% opt(2)  addbrn
% opt(3)  addbrf
% opt(4)  addsgn
% opt(5)  addtex
%
function str = sd(x, opt = [7 0 0 0 1])
  str = myn2s(x, opt(1), opt(2), opt(3), opt(4), opt(5));
endfunction

% --
% sf
% --
%
% string fraction
%
% x       number to convert
% opt(1)  maxdcp
% opt(2)  addbrn
% opt(3)  addbrf
% opt(4)  addsgn
% opt(5)  addtex
%
function str = sf(x, opt = [0 0 0 0 1])
  str = myn2s(x, opt(1), opt(2), opt(3), opt(4), opt(5));
endfunction

%%% NO CALCULATIONS YET %%%

printf("%% 2021-11-27\n");
printf("\\begin{exercise}\n");
printf("      {ID-569cd24194aa27d54b34a2aefd1992510fedb32b}\n");
printf("      {Ortskurve der Wendepunkte}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Gegeben sei die Funktionenschar\n");
printf("    $f_t:\\mathbb{R}\\to\\mathbb{R}$ mit\n");
printf("    \\begin{equation*}\n");
printf("      f_t(x)=\\frac{1}{3}x^3-2tx^2\n");
printf("      \\quad\\text{und}\\quad\n");
printf("      t\\in\\mathbb{R}.\n");
printf("    \\end{equation*}\n");
printf("    Bestimmen Sie die Funktionsgleichung der\n");
printf("    Ortskurve $w(x)$, auf der sich die\n");
printf("    Wendepunkte aller Funktionen der\n");
printf("    Funktionenschar $f_t$ befinden.\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\\par\n");
printf("    %% <OUTCOME>\n");
printf("    Als erstes müssen die Koordinaten des\n");
printf("    Wendepunktes $W$ ermittelt werden.\n");
printf("    Dazu behandelt man den Parameter $t$\n");
printf("    wie eine konstante (aber noch unbekannte)\n");
printf("    Zahl. Dabei ist es nicht unüblich, sondern\n");
printf("    eher zu erwarten, dass der Parameter $t$\n");
printf("    auch in der $x$- bzw. der $y$-Koordinate\n");
printf("    des Wendepunktes auftritt.\n");
printf("    \\par\n");
printf("    Die ersten drei Ableitungen lauten:\n");
printf("    \\begin{equation*}\n");
printf("        f_t(x)=\\frac{1}{3}x^3-2tx^2\n");
printf("        \\qquad\n");
printf("        f'_t(x)=x^2-4tx\n");
printf("        \\qquad\n");
printf("        f''_t(x)=2x-4t\n");
printf("        \\qquad\n");
printf("        f'''_t(x)=2\n");
printf("    \\end{equation*}\n");
printf("    Notwendig für das Vorhandensein eines\n");
printf("    Wendepunktes in $f$ ist eine Nullstelle\n");
printf("    in der zweiten Ableitung $f''$, also:\n");
printf("    \\begin{alignat*}{3}\n");
printf("      \\relax&\\quad\n");
printf("      &\n");
printf("      f''_t(x)=0&=2x-4t\n");
printf("      &\n");
printf("      \\quad&|+4t\n");
printf("      \\\\\n");
printf("      \\Leftrightarrow&\\quad\n");
printf("      &\n");
printf("      4t&=2x\n");
printf("      &\n");
printf("      \\quad&|:2\n");
printf("      \\\\\n");
printf("      \\Leftrightarrow&\\quad\n");
printf("      &\n");
printf("      2t&=x\n");
printf("      &\n");
printf("      \\quad&\\relax\n");
printf("    \\end{alignat*}\n");
printf("    Wenn darüber hinaus sichergestellt ist,\n");
printf("    dass die dritte Ableitung $f'''$ an dieser\n");
printf("    Stelle nicht den Wert Null annimmt, hat\n");
printf("    man zweifelsfrei die $x$-Koordinate eines\n");
printf("    Wendepunktes von $f$ ermittelt.\n");
printf("    \\begin{equation*}\n");
printf("      f'''_t(2t)=2\\neq0\n");
printf("    \\end{equation*}\n");
printf("    Also ist $2t$ tatsächlich die $x$-Koordinate\n");
printf("    eines Wendepunktes von $f_t$.\n");
printf("    Die $y$-Koordinate des Wendepunktes erhält\n");
printf("    man, indem man $2t$ für $x$ in $f_t(x)$\n");
printf("    einsetzt:\n");
printf("    \\begin{equation*}\n");
printf("      \\begin{split}\n");
printf("        f_t(2t)&=\\frac{1}{3}\\cdot(2t)^3-2t\\cdot(2t)^2\n");
printf("        \\\\[1ex]\n");
printf("        &=\\frac{1}{3}\\cdot8t^3-2t\\cdot4t^2\n");
printf("        \\\\[1ex]\n");
printf("        &=\\frac{8}{3}t^3-8t^3\n");
printf("        \\\\[1ex]\n");
printf("        &=\\left(\\frac{8}{3}-8\\right)\\cdot t^3\n");
printf("        \\\\[1ex]\n");
printf("        &=\\left(\\frac{8}{3}-\\frac{24}{3}\\right)\\cdot t^3\n");
printf("         =-\\frac{16}{3}t^3\n");
printf("      \\end{split}\n");
printf("    \\end{equation*}\n");
printf("    Jede Funktion der Funktionenschar $f_t$ besitzt\n");
printf("    also genau einen Wendepunkt $W$ mit den\n");
printf("    Koordinaten:\n");
printf("    \\begin{equation*}\n");
printf("      W\\left(2t\\;\\middle|\\;-\\frac{16}{3}t^3\\right)\n");
printf("    \\end{equation*}\n");
printf("    Für jede Wahl von $t$ kann man damit also die\n");
printf("    beiden Koordinaten des jeweiligen Wendepunktes\n");
printf("    bestimmen.\n");
printf("    Nun fragt man sich aber nicht mehr, wo der\n");
printf("    Wendepunkt liegt, wenn man ein bestimmtes\n");
printf("    $t$ wählt, sondern welches $t$ man wählen\n");
printf("    muss, damit der Wendepunkt an einer\n");
printf("    gewählten Stelle $x$ liegt (und welches\n");
printf("    $y$ sich dort ergibt).\n");
printf("    Diese Fragestellung führt auf die\n");
printf("    Funktionsgleichung der Ortskurve der\n");
printf("    Wendepunkte von $f_t$ in Abhängigkeit\n");
printf("    von $x$.\n");
printf("    \\par\n");
printf("    Im vorliegenden Fall gilt für die\n");
printf("    Koordinaten der Wendepunkte:\n");
printf("    \\begin{equation*}\n");
printf("      x=2t\n");
printf("      \\qquad\n");
printf("      y=-\\frac{16}{3}t^3\n");
printf("    \\end{equation*}\n");
printf("    Um das passende $t$ zu finden, für das\n");
printf("    der Wendepunkt an der Stelle $x$ liegt,\n");
printf("    löst man einfach die Gleichung der\n");
printf("    $x$-Ko\\-or\\-di\\-na\\-te nach $t$ auf:\n");
printf("    \\begin{equation*}\n");
printf("      x=2t\n");
printf("      \\quad\\Rightarrow\\quad\n");
printf("      t=\\frac{x}{2}\n");
printf("    \\end{equation*}\n");
printf("    Mit diesem $t$ erhält man die $y$-Koordinate\n");
printf("    des Wendepunktes an der Stelle $x$:\n");
printf("    \\begin{equation*}\n");
printf("      y=-\\frac{16}{3}t^3\n");
printf("       =-\\frac{16}{3}\\cdot\\left(\\frac{x}{2}\\right)^3\n");
printf("       =-\\frac{16}{3}\\cdot\\frac{x^3}{8}\n");
printf("       =-\\frac{2}{3}x^3\n");
printf("    \\end{equation*}\n");
printf("    Die Ortskurve der Wendepunkte von $f_t$ ist\n");
printf("    also der Graph der Funktion:\n");
printf("    \\begin{equation*}\n");
printf("      w(x)=-\\frac{2}{3}x^3\n");
printf("    \\end{equation*}\n");
printf("    \\begin{center}\n");
printf("      %%<OCTAVE>\n");
printf("      \\begin{tikzpicture}[scale=1.000]\n");
printf("        %% grid\n");
printf("        \\draw[draw=black!50!white] (-5.000, -5.000) grid[step=0.5] (5.000, 5.000);\n");
printf("        %% x-axis\n");
printf("        \\draw[line width=0.6pt, ->, >=stealth] (-5.000, 0) -- (5.000, 0) node[below left] {\\small$x$};\n");
printf("        %% y-axis\n");
printf("        \\draw[line width=0.6pt, ->, >=stealth] (0, -5.000) -- (0, 5.000) node[below left] {\\small$y$};\n");
printf("        %% function: f(x)=-\\num{0.6666667}x^{3}\n");
printf("        \\begin{scope}[line width=0.7pt]\n");
printf("          \\clip (-5.000, -5.000) rectangle (5.000, 5.000);\n");
printf("          \\draw[style=dashed] plot[smooth] coordinates\n");
printf("          {\n");
printf("            ( -5.000,   8.000) ( -4.900,   8.000) ( -4.800,   8.000)\n");
printf("            ( -4.700,   8.000) ( -4.600,   8.000) ( -4.500,   8.000)\n");
printf("            ( -4.400,   8.000) ( -4.300,   8.000) ( -4.200,   8.000)\n");
printf("            ( -4.100,   8.000) ( -4.000,   8.000) ( -3.900,   8.000)\n");
printf("            ( -3.800,   8.000) ( -3.700,   8.000) ( -3.600,   8.000)\n");
printf("            ( -3.500,   8.000) ( -3.400,   8.000) ( -3.300,   8.000)\n");
printf("            ( -3.200,   8.000) ( -3.100,   8.000) ( -3.000,   8.000)\n");
printf("            ( -2.900,   8.000) ( -2.800,   8.000) ( -2.700,   8.000)\n");
printf("            ( -2.600,   8.000) ( -2.500,   8.000) ( -2.400,   8.000)\n");
printf("            ( -2.300,   8.000) ( -2.200,   7.099) ( -2.100,   6.174)\n");
printf("            ( -2.000,   5.333) ( -1.900,   4.573) ( -1.800,   3.888)\n");
printf("            ( -1.700,   3.275) ( -1.600,   2.731) ( -1.500,   2.250)\n");
printf("            ( -1.400,   1.829) ( -1.300,   1.465) ( -1.200,   1.152)\n");
printf("            ( -1.100,   0.887) ( -1.000,   0.667) ( -0.900,   0.486)\n");
printf("            ( -0.800,   0.341) ( -0.700,   0.229) ( -0.600,   0.144)\n");
printf("            ( -0.500,   0.083) ( -0.400,   0.043) ( -0.300,   0.018)\n");
printf("            ( -0.200,   0.005) ( -0.100,   0.001) (  0.000,   0.000)\n");
printf("            (  0.100,  -0.001) (  0.200,  -0.005) (  0.300,  -0.018)\n");
printf("            (  0.400,  -0.043) (  0.500,  -0.083) (  0.600,  -0.144)\n");
printf("            (  0.700,  -0.229) (  0.800,  -0.341) (  0.900,  -0.486)\n");
printf("            (  1.000,  -0.667) (  1.100,  -0.887) (  1.200,  -1.152)\n");
printf("            (  1.300,  -1.465) (  1.400,  -1.829) (  1.500,  -2.250)\n");
printf("            (  1.600,  -2.731) (  1.700,  -3.275) (  1.800,  -3.888)\n");
printf("            (  1.900,  -4.573) (  2.000,  -5.333) (  2.100,  -6.174)\n");
printf("            (  2.200,  -7.099) (  2.300,  -8.000) (  2.400,  -8.000)\n");
printf("            (  2.500,  -8.000) (  2.600,  -8.000) (  2.700,  -8.000)\n");
printf("            (  2.800,  -8.000) (  2.900,  -8.000) (  3.000,  -8.000)\n");
printf("            (  3.100,  -8.000) (  3.200,  -8.000) (  3.300,  -8.000)\n");
printf("            (  3.400,  -8.000) (  3.500,  -8.000) (  3.600,  -8.000)\n");
printf("            (  3.700,  -8.000) (  3.800,  -8.000) (  3.900,  -8.000)\n");
printf("            (  4.000,  -8.000) (  4.100,  -8.000) (  4.200,  -8.000)\n");
printf("            (  4.300,  -8.000) (  4.400,  -8.000) (  4.500,  -8.000)\n");
printf("            (  4.600,  -8.000) (  4.700,  -8.000) (  4.800,  -8.000)\n");
printf("            (  4.900,  -8.000) (  5.000,  -8.000)\n");
printf("          };\n");
printf("        \\end{scope}\n");
printf("        %% function: f(x)=\\num{0.3333333}x^{3}-x^{2}\n");
printf("        \\begin{scope}[line width=0.7pt]\n");
printf("          \\clip (-5.000, -5.000) rectangle (5.000, 5.000);\n");
printf("          \\draw plot[smooth] coordinates\n");
printf("          {\n");
printf("            ( -5.000,  -8.000) ( -4.900,  -8.000) ( -4.800,  -8.000)\n");
printf("            ( -4.700,  -8.000) ( -4.600,  -8.000) ( -4.500,  -8.000)\n");
printf("            ( -4.400,  -8.000) ( -4.300,  -8.000) ( -4.200,  -8.000)\n");
printf("            ( -4.100,  -8.000) ( -4.000,  -8.000) ( -3.900,  -8.000)\n");
printf("            ( -3.800,  -8.000) ( -3.700,  -8.000) ( -3.600,  -8.000)\n");
printf("            ( -3.500,  -8.000) ( -3.400,  -8.000) ( -3.300,  -8.000)\n");
printf("            ( -3.200,  -8.000) ( -3.100,  -8.000) ( -3.000,  -8.000)\n");
printf("            ( -2.900,  -8.000) ( -2.800,  -8.000) ( -2.700,  -8.000)\n");
printf("            ( -2.600,  -8.000) ( -2.500,  -8.000) ( -2.400,  -8.000)\n");
printf("            ( -2.300,  -8.000) ( -2.200,  -8.000) ( -2.100,  -7.497)\n");
printf("            ( -2.000,  -6.667) ( -1.900,  -5.896) ( -1.800,  -5.184)\n");
printf("            ( -1.700,  -4.528) ( -1.600,  -3.925) ( -1.500,  -3.375)\n");
printf("            ( -1.400,  -2.875) ( -1.300,  -2.422) ( -1.200,  -2.016)\n");
printf("            ( -1.100,  -1.654) ( -1.000,  -1.333) ( -0.900,  -1.053)\n");
printf("            ( -0.800,  -0.811) ( -0.700,  -0.604) ( -0.600,  -0.432)\n");
printf("            ( -0.500,  -0.292) ( -0.400,  -0.181) ( -0.300,  -0.099)\n");
printf("            ( -0.200,  -0.043) ( -0.100,  -0.010) (  0.000,   0.000)\n");
printf("            (  0.100,  -0.010) (  0.200,  -0.037) (  0.300,  -0.081)\n");
printf("            (  0.400,  -0.139) (  0.500,  -0.208) (  0.600,  -0.288)\n");
printf("            (  0.700,  -0.376) (  0.800,  -0.469) (  0.900,  -0.567)\n");
printf("            (  1.000,  -0.667) (  1.100,  -0.766) (  1.200,  -0.864)\n");
printf("            (  1.300,  -0.958) (  1.400,  -1.045) (  1.500,  -1.125)\n");
printf("            (  1.600,  -1.195) (  1.700,  -1.252) (  1.800,  -1.296)\n");
printf("            (  1.900,  -1.324) (  2.000,  -1.333) (  2.100,  -1.323)\n");
printf("            (  2.200,  -1.291) (  2.300,  -1.234) (  2.400,  -1.152)\n");
printf("            (  2.500,  -1.042) (  2.600,  -0.901) (  2.700,  -0.729)\n");
printf("            (  2.800,  -0.523) (  2.900,  -0.280) (  3.000,   0.000)\n");
printf("            (  3.100,   0.320) (  3.200,   0.683) (  3.300,   1.089)\n");
printf("            (  3.400,   1.541) (  3.500,   2.042) (  3.600,   2.592)\n");
printf("            (  3.700,   3.194) (  3.800,   3.851) (  3.900,   4.563)\n");
printf("            (  4.000,   5.333) (  4.100,   6.164) (  4.200,   7.056)\n");
printf("            (  4.300,   8.000) (  4.400,   8.000) (  4.500,   8.000)\n");
printf("            (  4.600,   8.000) (  4.700,   8.000) (  4.800,   8.000)\n");
printf("            (  4.900,   8.000) (  5.000,   8.000)\n");
printf("          };\n");
printf("        \\end{scope}\n");
printf("        %% function: f(x)=\\num{0.3333333}x^{3}-\\num{1.5}x^{2}\n");
printf("        \\begin{scope}[line width=0.7pt]\n");
printf("          \\clip (-5.000, -5.000) rectangle (5.000, 5.000);\n");
printf("          \\draw plot[smooth] coordinates\n");
printf("          {\n");
printf("            ( -5.000,  -8.000) ( -4.900,  -8.000) ( -4.800,  -8.000)\n");
printf("            ( -4.700,  -8.000) ( -4.600,  -8.000) ( -4.500,  -8.000)\n");
printf("            ( -4.400,  -8.000) ( -4.300,  -8.000) ( -4.200,  -8.000)\n");
printf("            ( -4.100,  -8.000) ( -4.000,  -8.000) ( -3.900,  -8.000)\n");
printf("            ( -3.800,  -8.000) ( -3.700,  -8.000) ( -3.600,  -8.000)\n");
printf("            ( -3.500,  -8.000) ( -3.400,  -8.000) ( -3.300,  -8.000)\n");
printf("            ( -3.200,  -8.000) ( -3.100,  -8.000) ( -3.000,  -8.000)\n");
printf("            ( -2.900,  -8.000) ( -2.800,  -8.000) ( -2.700,  -8.000)\n");
printf("            ( -2.600,  -8.000) ( -2.500,  -8.000) ( -2.400,  -8.000)\n");
printf("            ( -2.300,  -8.000) ( -2.200,  -8.000) ( -2.100,  -8.000)\n");
printf("            ( -2.000,  -8.000) ( -1.900,  -7.701) ( -1.800,  -6.804)\n");
printf("            ( -1.700,  -5.973) ( -1.600,  -5.205) ( -1.500,  -4.500)\n");
printf("            ( -1.400,  -3.855) ( -1.300,  -3.267) ( -1.200,  -2.736)\n");
printf("            ( -1.100,  -2.259) ( -1.000,  -1.833) ( -0.900,  -1.458)\n");
printf("            ( -0.800,  -1.131) ( -0.700,  -0.849) ( -0.600,  -0.612)\n");
printf("            ( -0.500,  -0.417) ( -0.400,  -0.261) ( -0.300,  -0.144)\n");
printf("            ( -0.200,  -0.063) ( -0.100,  -0.015) (  0.000,   0.000)\n");
printf("            (  0.100,  -0.015) (  0.200,  -0.057) (  0.300,  -0.126)\n");
printf("            (  0.400,  -0.219) (  0.500,  -0.333) (  0.600,  -0.468)\n");
printf("            (  0.700,  -0.621) (  0.800,  -0.789) (  0.900,  -0.972)\n");
printf("            (  1.000,  -1.167) (  1.100,  -1.371) (  1.200,  -1.584)\n");
printf("            (  1.300,  -1.803) (  1.400,  -2.025) (  1.500,  -2.250)\n");
printf("            (  1.600,  -2.475) (  1.700,  -2.697) (  1.800,  -2.916)\n");
printf("            (  1.900,  -3.129) (  2.000,  -3.333) (  2.100,  -3.528)\n");
printf("            (  2.200,  -3.711) (  2.300,  -3.879) (  2.400,  -4.032)\n");
printf("            (  2.500,  -4.167) (  2.600,  -4.281) (  2.700,  -4.374)\n");
printf("            (  2.800,  -4.443) (  2.900,  -4.485) (  3.000,  -4.500)\n");
printf("            (  3.100,  -4.485) (  3.200,  -4.437) (  3.300,  -4.356)\n");
printf("            (  3.400,  -4.239) (  3.500,  -4.083) (  3.600,  -3.888)\n");
printf("            (  3.700,  -3.651) (  3.800,  -3.369) (  3.900,  -3.042)\n");
printf("            (  4.000,  -2.667) (  4.100,  -2.241) (  4.200,  -1.764)\n");
printf("            (  4.300,  -1.233) (  4.400,  -0.645) (  4.500,   0.000)\n");
printf("            (  4.600,   0.705) (  4.700,   1.473) (  4.800,   2.304)\n");
printf("            (  4.900,   3.201) (  5.000,   4.167)\n");
printf("          };\n");
printf("        \\end{scope}\n");
printf("        %% function: f(x)=\\num{0.3333333}x^{3}+x^{2}\n");
printf("        \\begin{scope}[line width=0.7pt]\n");
printf("          \\clip (-5.000, -5.000) rectangle (5.000, 5.000);\n");
printf("          \\draw plot[smooth] coordinates\n");
printf("          {\n");
printf("            ( -5.000,  -8.000) ( -4.900,  -8.000) ( -4.800,  -8.000)\n");
printf("            ( -4.700,  -8.000) ( -4.600,  -8.000) ( -4.500,  -8.000)\n");
printf("            ( -4.400,  -8.000) ( -4.300,  -8.000) ( -4.200,  -7.056)\n");
printf("            ( -4.100,  -6.164) ( -4.000,  -5.333) ( -3.900,  -4.563)\n");
printf("            ( -3.800,  -3.851) ( -3.700,  -3.194) ( -3.600,  -2.592)\n");
printf("            ( -3.500,  -2.042) ( -3.400,  -1.541) ( -3.300,  -1.089)\n");
printf("            ( -3.200,  -0.683) ( -3.100,  -0.320) ( -3.000,   0.000)\n");
printf("            ( -2.900,   0.280) ( -2.800,   0.523) ( -2.700,   0.729)\n");
printf("            ( -2.600,   0.901) ( -2.500,   1.042) ( -2.400,   1.152)\n");
printf("            ( -2.300,   1.234) ( -2.200,   1.291) ( -2.100,   1.323)\n");
printf("            ( -2.000,   1.333) ( -1.900,   1.324) ( -1.800,   1.296)\n");
printf("            ( -1.700,   1.252) ( -1.600,   1.195) ( -1.500,   1.125)\n");
printf("            ( -1.400,   1.045) ( -1.300,   0.958) ( -1.200,   0.864)\n");
printf("            ( -1.100,   0.766) ( -1.000,   0.667) ( -0.900,   0.567)\n");
printf("            ( -0.800,   0.469) ( -0.700,   0.376) ( -0.600,   0.288)\n");
printf("            ( -0.500,   0.208) ( -0.400,   0.139) ( -0.300,   0.081)\n");
printf("            ( -0.200,   0.037) ( -0.100,   0.010) (  0.000,   0.000)\n");
printf("            (  0.100,   0.010) (  0.200,   0.043) (  0.300,   0.099)\n");
printf("            (  0.400,   0.181) (  0.500,   0.292) (  0.600,   0.432)\n");
printf("            (  0.700,   0.604) (  0.800,   0.811) (  0.900,   1.053)\n");
printf("            (  1.000,   1.333) (  1.100,   1.654) (  1.200,   2.016)\n");
printf("            (  1.300,   2.422) (  1.400,   2.875) (  1.500,   3.375)\n");
printf("            (  1.600,   3.925) (  1.700,   4.528) (  1.800,   5.184)\n");
printf("            (  1.900,   5.896) (  2.000,   6.667) (  2.100,   7.497)\n");
printf("            (  2.200,   8.000) (  2.300,   8.000) (  2.400,   8.000)\n");
printf("            (  2.500,   8.000) (  2.600,   8.000) (  2.700,   8.000)\n");
printf("            (  2.800,   8.000) (  2.900,   8.000) (  3.000,   8.000)\n");
printf("            (  3.100,   8.000) (  3.200,   8.000) (  3.300,   8.000)\n");
printf("            (  3.400,   8.000) (  3.500,   8.000) (  3.600,   8.000)\n");
printf("            (  3.700,   8.000) (  3.800,   8.000) (  3.900,   8.000)\n");
printf("            (  4.000,   8.000) (  4.100,   8.000) (  4.200,   8.000)\n");
printf("            (  4.300,   8.000) (  4.400,   8.000) (  4.500,   8.000)\n");
printf("            (  4.600,   8.000) (  4.700,   8.000) (  4.800,   8.000)\n");
printf("            (  4.900,   8.000) (  5.000,   8.000)\n");
printf("          };\n");
printf("        \\end{scope}\n");
printf("        %% function: f(x)=\\num{0.3333333}x^{3}+\\num{1.5}x^{2}\n");
printf("        \\begin{scope}[line width=0.7pt]\n");
printf("          \\clip (-5.000, -5.000) rectangle (5.000, 5.000);\n");
printf("          \\draw plot[smooth] coordinates\n");
printf("          {\n");
printf("            ( -5.000,  -4.167) ( -4.900,  -3.201) ( -4.800,  -2.304)\n");
printf("            ( -4.700,  -1.473) ( -4.600,  -0.705) ( -4.500,   0.000)\n");
printf("            ( -4.400,   0.645) ( -4.300,   1.233) ( -4.200,   1.764)\n");
printf("            ( -4.100,   2.241) ( -4.000,   2.667) ( -3.900,   3.042)\n");
printf("            ( -3.800,   3.369) ( -3.700,   3.651) ( -3.600,   3.888)\n");
printf("            ( -3.500,   4.083) ( -3.400,   4.239) ( -3.300,   4.356)\n");
printf("            ( -3.200,   4.437) ( -3.100,   4.485) ( -3.000,   4.500)\n");
printf("            ( -2.900,   4.485) ( -2.800,   4.443) ( -2.700,   4.374)\n");
printf("            ( -2.600,   4.281) ( -2.500,   4.167) ( -2.400,   4.032)\n");
printf("            ( -2.300,   3.879) ( -2.200,   3.711) ( -2.100,   3.528)\n");
printf("            ( -2.000,   3.333) ( -1.900,   3.129) ( -1.800,   2.916)\n");
printf("            ( -1.700,   2.697) ( -1.600,   2.475) ( -1.500,   2.250)\n");
printf("            ( -1.400,   2.025) ( -1.300,   1.803) ( -1.200,   1.584)\n");
printf("            ( -1.100,   1.371) ( -1.000,   1.167) ( -0.900,   0.972)\n");
printf("            ( -0.800,   0.789) ( -0.700,   0.621) ( -0.600,   0.468)\n");
printf("            ( -0.500,   0.333) ( -0.400,   0.219) ( -0.300,   0.126)\n");
printf("            ( -0.200,   0.057) ( -0.100,   0.015) (  0.000,   0.000)\n");
printf("            (  0.100,   0.015) (  0.200,   0.063) (  0.300,   0.144)\n");
printf("            (  0.400,   0.261) (  0.500,   0.417) (  0.600,   0.612)\n");
printf("            (  0.700,   0.849) (  0.800,   1.131) (  0.900,   1.458)\n");
printf("            (  1.000,   1.833) (  1.100,   2.259) (  1.200,   2.736)\n");
printf("            (  1.300,   3.267) (  1.400,   3.855) (  1.500,   4.500)\n");
printf("            (  1.600,   5.205) (  1.700,   5.973) (  1.800,   6.804)\n");
printf("            (  1.900,   7.701) (  2.000,   8.000) (  2.100,   8.000)\n");
printf("            (  2.200,   8.000) (  2.300,   8.000) (  2.400,   8.000)\n");
printf("            (  2.500,   8.000) (  2.600,   8.000) (  2.700,   8.000)\n");
printf("            (  2.800,   8.000) (  2.900,   8.000) (  3.000,   8.000)\n");
printf("            (  3.100,   8.000) (  3.200,   8.000) (  3.300,   8.000)\n");
printf("            (  3.400,   8.000) (  3.500,   8.000) (  3.600,   8.000)\n");
printf("            (  3.700,   8.000) (  3.800,   8.000) (  3.900,   8.000)\n");
printf("            (  4.000,   8.000) (  4.100,   8.000) (  4.200,   8.000)\n");
printf("            (  4.300,   8.000) (  4.400,   8.000) (  4.500,   8.000)\n");
printf("            (  4.600,   8.000) (  4.700,   8.000) (  4.800,   8.000)\n");
printf("            (  4.900,   8.000) (  5.000,   8.000)\n");
printf("          };\n");
printf("        \\end{scope}\n");
printf("        \\fill (1.0000, -0.6667) circle[radius=1.75pt];\n");
printf("        \\fill (1.5000, -2.2500) circle[radius=1.75pt];\n");
printf("        \\fill (-1.0000, 0.6667) circle[radius=1.75pt];\n");
printf("        \\fill (-1.5000, 2.2500) circle[radius=1.75pt];\n");
printf("        %%t = -0.75;\n");
printf("        %%x = 2 * t;\n");
printf("        %%y = -2/3 * x^3;\n");
printf("        %%printf(\"\\\\fill (%%6.4f, %%6.4f) circle[radius=1.75pt];\\n\", x, y);\n");
printf("      \\end{tikzpicture}\n");
printf("      %%</OCTAVE>\n");
printf("      %%w = [-2/3 0 0 0];\n");
printf("      %%mypolyplot(w, -5, 5, -5, 5, 0.1)\n");
printf("      %%t = 0.5;\n");
printf("      %%f = [1/3 -2*t 0 0];\n");
printf("      %%mypolyplot(f, -5, 5, -5, 5, 0.1)\n");
printf("      %%t = 0.75;\n");
printf("      %%f = [1/3 -2*t 0 0];\n");
printf("      %%mypolyplot(f, -5, 5, -5, 5, 0.1)\n");
printf("      %%t = -0.5;\n");
printf("      %%f = [1/3 -2*t 0 0];\n");
printf("      %%mypolyplot(f, -5, 5, -5, 5, 0.1)\n");
printf("      %%t = -0.75;\n");
printf("      %%f = [1/3 -2*t 0 0];\n");
printf("      %%mypolyplot(f, -5, 5, -5, 5, 0.1)\n");
printf("    \\end{center}\n");
printf("    %% </OUTCOME>\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

