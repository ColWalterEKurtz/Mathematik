clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-2ac2584f5ad6fc8d2f0460198e380c2b7831adf2}\n");
printf("      {Drohne}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Ein Amateurfilmer möchte mit seiner Drohne spektakuläre Landschaftsaufnahnem\n");
printf("    eines Bergpanoramas machen. Etwa auf halber Höhe des Berges startet er\n");
printf("    die Drohne. Sie ist so programmiert, dass sie zunächst \\SI{20}{\\metre}\n");
printf("    bis auf Punkt\n");
printf("    $A\\left(\\num{-1516}\\;\\middle|\\;\\num{112}\\;\\middle|\\;\\num{960}\\right)$\n");
printf("    steigt, um dann geradlinig mit konstanter Geschwindigkeit in\n");
printf("    \\num{5} Minuten zu Punkt\n");
printf("    $B\\left(\\num{-616}\\;\\middle|\\;\\num{1312}\\;\\middle|\\;\\num{960}\\right)$\n");
printf("    zu fliegn. Sobald sie Punkt $B$ erreicht hat, kehrt sie um, und fliegt auf\n");
printf("    demselben Weg mit derselben Geschwindigkeit zum Ausgangspunkt $A$ zurück.\n");
printf("    Dort wird das abschließende Landemanöver\n");
printf("    eingeleitet.\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\item Geben Sie eine Parametergleichung\n");
printf("            der Geraden an, mit der man die\n");
printf("            Flugbahn der Drohne zwischen den\n");
printf("            Punkten $A$ und $B$ beschreiben kann\n");
printf("            (ohne Start und Landung).\n");
printf("      \\item Alle Koordinaten sind in der Einheit\n");
printf("            Meter angegebem. Mit welcher Geschwindigkeit\n");
printf("            fliegt die Drohne auf dem programmierten Kurs\n");
printf("            von $A$ nach $B$?\n");
printf("    \\end{enumerate}\n");
printf("    Auf dem Berghang, den die Drohne überfliegen soll,\n");
printf("    befindet sich eine Seilbahn.\n");
printf("    Eine Minute bevor die Drohne in Punkt $A$\n");
printf("    ihre Kamerafahrt startet, verlassen zwei Gondeln der\n");
printf("    Seilbahn die Tal- bzw. Bergstation.\n");
printf("    Sie bewegen sich auf folgenden Bahnen:\n");
printf("    \\begin{equation*}\n");
printf("      \\vec{x}_{\\text{auf}}=\n");
printf("      \\begin{pmatrix}\\num{0}\\\\\\num{0}\\\\\\num{0}\\end{pmatrix}\n");
printf("      +r\\cdot\n");
printf("      \\begin{pmatrix}\\num{-101}\\\\\\num{132}\\\\\\num{120}\\end{pmatrix}\n");
printf("      \\quad\\text{bzw.}\\quad\n");
printf("      \\vec x_{\\text{ab}}=\n");
printf("      \\begin{pmatrix}\\num{-1503}\\\\\\num{1996}\\\\\\num{1800}\\end{pmatrix}\n");
printf("      +s\\cdot\n");
printf("      \\begin{pmatrix}\\num{101}\\\\\\num{-132}\\\\\\num{-120}\\end{pmatrix}\n");
printf("    \\end{equation*}\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\setcounter{enumi}{2}%%\n");
printf("      \\item Die Bergstation liegt \\SI{1800}{\\metre}\n");
printf("            höher als die Talstation. Wie lang dauert\n");
printf("            eine Fahrt zwischen den Stationen, wenn\n");
printf("            sich die Gondeln mit \\SI{205}{\\metre\\per\\minute}\n");
printf("            bewegen?\n");
printf("      \\item Wie lang ist die Seilbahnstrecke?\n");
printf("      \\item Wie groß ist der Steigungswinkel der\n");
printf("            Seilbahnstrecke?\n");
printf("      \\item Schneidet die Flugbahn der Drohne eine oder\n");
printf("            beide Bahnen der Gondeln? Geben Sie\n");
printf("            eventuelle Schnittpunkte am.\n");
printf("      \\item Kommt es zu einer Kollision?\n");
printf("    \\end{enumerate}\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  %%\\ifoutcome\\outcome\\par\n");
printf("    %% <OUTCOME>\n");
printf("    %% </OUTCOME>\n");
printf("  %%\\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

