clear all;

addpath 'Octave/';

entfernung = 600;
vAB        = 140;
vBA        = 110;
t          = entfernung / (vAB + vBA);
d          = vAB * t;

ins_entfernung = sprintf("%d", entfernung);
ins_vAB        = sprintf("%d", vAB);
ins_vBA        = sprintf("%d", vBA);
ins_t          = sprintf("%g", t);
ins_d          = sprintf("%g", d);

printf("\\begin{exercise}\n");
printf("      {ID-0a1ac88fc6de5828c0f1babdd50ac203b2ee3761}\n");
printf("      {Augsburg -- Berlin}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    Augsburg liegt etwa \\sikm{%s} weit von Berlin entfernt. Herr $A$ startet\n", ins_entfernung);
printf("    in Augsburg und fährt mit einer Durchschnittsgeschwindigkeit von \\sikmh{%s}\n", ins_vAB);
printf("    nach Berlin. Gleichzeitig startet Herr $B$ in Berlin und fährt mit einer\n");
printf("    Durchschnittsgeschwindigkeit von \\sikmh{%s} nach Augsburg.\n", ins_vBA);
printf("    Nach welcher Zeit begegnen sie sich und wie weit ist der Treffpunkt dann\n");
printf("    von Augsburg entfernt?\n");
printf("  \\fi\n");
printf("  \\ifoutline\\outline\\par\n");
printf("    Gesucht wird der Schnittpunkt zweier Geraden. Auf der $x$-Achse des Koordinatensystems\n");
printf("    ist die Zeit (in Stunden) und auf der $y$-Achse die Entfernung (in Kilometern) eingetragen.\n");
printf("    Da sich die beiden Fahrzeuge aufeinander zubewegen, muss eine der beiden\n");
printf("    Durchschnittsgeschwindigkeiten als negative Steigung interpretiert werden.\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}[scale=0.5]\n");
printf("        %% x-Achse\n");
printf("        \\draw[->, >=stealth] (-1, 0) -- (5, 0);\n");
printf("        %% y-Achse\n");
printf("        \\draw[->, >=stealth] (0, -1) -- (0, 5);\n");
printf("        %% Start- und Endpunkte der Geraden\n");
printf("        \\coordinate (A1) at ( -0.389,  -0.500);\n");
printf("        \\coordinate (A2) at (  3.500,   4.500);\n");
printf("        \\coordinate (B1) at ( -0.500,   4.000);\n");
printf("        \\coordinate (B2) at (  4.000,  -0.500);\n");
printf("        \\draw (A1) -- (A2);\n");
printf("        \\draw (B1) -- (B2);\n");
printf("        \\node[right] at (A2) {{\\small$m_1=\\sikmh{%s}$}};\n", ins_vAB);
printf("        \\node[right] at (B2) {{\\small$m_2=\\sikmh{-%s}$}};\n", ins_vBA);
printf("        \\draw (0.2, 3.5) -- (-0.2, 3.5) node[left] {{\\small\\sikm{%s}}};\n", ins_entfernung);
printf("        \\node[right] at (12, 2)\n");
printf("        {%%\n");
printf("          \\begin{minipage}{12em}%%\n");
printf("            \\setlength{\\abovedisplayskip}{0pt}%%\n");
printf("            \\begin{equation*}\n");
printf("              \\begin{split}\n");
printf("                g_1(x)&=\\num{%s}\\cdot x \\\\[1ex]\n", ins_vAB);
printf("                g_2(x)&=\\num{-%s}\\cdot x+\\num{%s}\n", ins_vBA, ins_entfernung);
printf("              \\end{split}\n");
printf("            \\end{equation*}\n");
printf("          \\end{minipage}%%\n");
printf("        };\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("  \\fi\n");
printf("  \\ifoutcome\\outcome\\par\n");
printf("    \\begin{equation*}\n");
printf("      \\num{%s}\\cdot x=\\num{-%s}\\cdot x+%s\n", ins_vAB, ins_vBA, ins_entfernung);
printf("      \\quad\\Rightarrow\\quad\n");
printf("      x=\\num{%s}\n", ins_t);
printf("    \\end{equation*}\n");
printf("    Die beiden Fahrzeuge begegnen sich also nach einer Fahrzeit von \\num{%s}\n", ins_t);
printf("    Stunden und sind dann $g_1(\\num{%s})=\\sikm{%s}$ weit von Augsburg entfernt.\n", ins_t, ins_d);
printf("  \\fi\n");
printf("\\end{exercise}\n");

rmpath 'Octave/';

