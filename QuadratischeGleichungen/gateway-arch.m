clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-79763e9291ca3e4cfb33b1f0e1ee05d24c620d41}\n");
printf("      {Gateway-Arch}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Der Gateway-Arch (1959--1965 gebaut) in St.\\,Louis, Missouri, ist laut\n");
printf("    Angaben eines Reiseführers ein parabelförmiger Bogen aus rostfreiem\n");
printf("    Stahl. Er ist 630 Fuß (\\emph{ft}) hoch und an seiner breitesten Stelle\n");
printf("    ebenso breit. Er soll als \\glqq{}Tor zum Westen\\grqq{} an den nach 1800\n");
printf("    einsetzenden Siedlerstrom nach Westen in den USA erinnern.\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\item Wie breit ist der Bogen in 300\\,\\emph{ft} Höhe (in \\emph{ft})?\n");
printf("      \\item 1\\,\\emph{ft} entspricht \\simeter{0.3048}. Bestimme eine\n");
printf("            Funktionsgleichung mit der man die Höhe des Gateway-Arch in Metern\n");
printf("            beschreiben kann.\n");
printf("      \\item Bei einer Flugshow soll ein Flugzeug mit einer Flügelspannweite\n");
printf("            von \\simeter{18} unter dem Bogen hindurch fliegen. Welche maximale\n");
printf("            Flughöhe muss der Pilot einhalten, wenn in vertikaler und horizontaler\n");
printf("            Richtung ein Sicherheitsabstand zum Bogen von \\simeter{10} eingehalten\n");
printf("            werden muss?\n");
printf("    \\end{enumerate}\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\n");
printf("    %% <OUTCOME>\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\item Wenn man den Ursprung des Koordinatensystems\n");
printf("            in die Mitte des Bauwerks auf Bodenhöhe\n");
printf("            legt, besitzt die Funktion, die die Parabel\n");
printf("            beschreibt, ihren Scheitelpunkt bei\n");
printf("            $\\left(0\\;\\middle|\\;630\\right)$ und zwei\n");
printf("            Nullstellen bei $\\left(-315\\;\\middle|\\;0\\right)$\n");
printf("            und $\\left(315\\;\\middle|\\;0\\right)$.\n");
printf("            Mit diesen Informationen lässt sich die\n");
printf("            Funktionsgleichung bestimmen:\n");
printf("            \\begin{equation*}\n");
printf("              \\begin{split}\n");
printf("                f(x)&=a\\cdot(x-0)^2+630=ax^2+630\n");
printf("                \\\\\n");
printf("                0&=a\\cdot315^2+630\n");
printf("                \\\\[1ex]\n");
printf("                \\Rightarrow\\quad\n");
printf("                a&=-\\frac{630}{315^2}=-\\frac{2}{315}\n");
printf("              \\end{split}\n");
printf("            \\end{equation*}\n");
printf("            Um die Breite in \\num{300}\\,\\textit{ft}\n");
printf("            Höhe bestimmen zu können, muss man\n");
printf("            zunächst die $x$-Werte finden, bei\n");
printf("            denen sich der $y$-Wert \\num{300}\n");
printf("            ergibt.\n");
printf("            \\begin{alignat*}{3}\n");
printf("              \\relax&\\quad\n");
printf("              &\n");
printf("              300&=-\\frac{2}{315}\\cdot x^2+630\n");
printf("              &\n");
printf("              \\quad&|-300\n");
printf("              \\\\[1ex]\n");
printf("              \\Leftrightarrow&\\quad\n");
printf("              &\n");
printf("              0&=-\\frac{2}{315}\\cdot x^2+330\n");
printf("              &\n");
printf("              \\quad&|:\\left(-\\frac{2}{315}\\right)\n");
printf("              \\\\[1ex]\n");
printf("              \\Leftrightarrow&\\quad\n");
printf("              &\n");
printf("              0&=x^2-\\num{51975}\n");
printf("              &\n");
printf("              \\quad&\\relax\n");
printf("              \\\\[1ex]\n");
printf("              \\relax&\\quad\n");
printf("              &\n");
printf("              x_1&=-\\sqrt{\\num{51975}}\\approx-\\num{227.98}\n");
printf("              &\n");
printf("              \\quad&\\relax\n");
printf("              \\\\\n");
printf("              \\relax&\\quad\n");
printf("              &\n");
printf("              x_2&=\\sqrt{\\num{51975}}\\approx\\num{227.98}\n");
printf("              &\n");
printf("              \\quad&\\relax\n");
printf("            \\end{alignat*}\n");
printf("            Der Gateway-Arch ist also in \\num{300}\\,\\textit{ft}\n");
printf("            Höhe etwa \\num{455.96}\\,\\textit{ft} breit.\n");
printf("      \\item Um in der Einheit Meter rechnen zu könmem,\n");
printf("            muss die Funktion $f$ sowohl in $x$-\n");
printf("            als auch in $y$-Richtung gestaucht\n");
printf("            werden. Alle bisher berechneten Höhen\n");
printf("            hatten die Einheit Fuß. Folgende\n");
printf("            Transformation liefert Höhen in der\n");
printf("            Einheit Meter:\n");
printf("            \\begin{equation*}\n");
printf("              g(x)=\\num{0.3048}\\cdot f(x)\n");
printf("            \\end{equation*}\n");
printf("            Alle bisher eingesetzten horizontalen\n");
printf("            Entfernungen hatten ebenfalls die Einheit Fuß.\n");
printf("            Folgende Transformation ermöglicht es zusätzlich\n");
printf("            auch die $x$-Werte in der Einheit Meter einsetzen\n");
printf("            zu können:\n");
printf("            \\begin{equation*}\n");
printf("              g(x)=\\num{0.3048}\\cdot f(x:\\num{0.3048})\n");
printf("            \\end{equation*}\n");
printf("            Man erhält also insgesamt folgende Funktion:\n");
printf("            \\begin{equation*}\n");
printf("              \\begin{split}\n");
printf("                g(x)&=\\num{0.3048}\\cdot\n");
printf("                \\left(\n");
printf("                  -\\frac{2}{315}\\cdot\n");
printf("                  \\left(\n");
printf("                    \\frac{x}{\\num{0.3048}}\n");
printf("                  \\right)^2\n");
printf("                  +630\n");
printf("                \\right)\n");
printf("                \\\\[1ex]\n");
printf("                &=-\\frac{2}{315\\cdot\\num{0.3048}}\\cdot x^2\n");
printf("                  +\\num{630}\\cdot\\num{0.3048}\n");
printf("                \\\\[1ex]\n");
printf("                &=-\\frac{167}{\\num{8017}}\\cdot x^2\n");
printf("                 +\\frac{\\num{24003}}{\\num{125}}\n");
printf("                \\approx-\\num{0.021}x^2+\\num{192.024}\n");
printf("                %%rats(-2 / (315 * 0.3048))\n");
printf("                %%rats(630 * 0.3048)\n");
printf("              \\end{split}\n");
printf("            \\end{equation*}\n");
printf("      \\item Der Sicherheitsbereich um das Flugzeug\n");
printf("            herum hat die Form eines Rechtecks:\n");
printf("            \\begin{center}\n");
printf("              \\begin{tikzpicture}\n");
printf("                \\begin{scope}[line width=1.5pt]\n");
printf("                  \\draw (-9mm, 0) -- (9mm, 0);\n");
printf("                  \\draw (0, 0) -- (0, 5mm);\n");
printf("                  \\fill (0, 0) circle[radius=1.25mm];\n");
printf("                  \\draw (0, 0) circle[radius=2.25mm];\n");
printf("                \\end{scope}\n");
printf("                %% Sicherheitsbereich\n");
printf("                \\draw (-19mm, -10mm) rectangle (19mm, 10mm);\n");
printf("                %% Hilfslinien\n");
printf("                \\draw[style=dashed] (-9mm, -12mm) -- (-9mm, 0mm);\n");
printf("                \\draw[style=dashed] ( 9mm, -12mm) -- ( 9mm, 0mm);\n");
printf("                %% Hilfslinien horizontal\n");
printf("                \\draw[style=dashed] (19mm,  10mm) -- (35mm,  10mm);\n");
printf("                \\draw[style=dashed] ( 9mm,   0mm) -- (35mm,   0mm);\n");
printf("                \\draw[style=dashed] (19mm, -10mm) -- (35mm, -10mm);\n");
printf("                %% Beschriftung unten\n");
printf("                \\begin{scope}[yshift=-12mm, >=stealth]\n");
printf("                  \\draw[|<->]  (-19mm, 0) -- node[below]{\\SI{10}{\\metre}} (-9mm, 0);\n");
printf("                  \\draw[|<->|] ( -9mm, 0) -- node[below]{\\SI{18}{\\metre}} ( 9mm, 0);\n");
printf("                  \\draw[<->|]  (  9mm, 0) -- node[below]{\\SI{10}{\\metre}} (19mm, 0);\n");
printf("                \\end{scope}\n");
printf("                %% Beschriftung rechts\n");
printf("                \\begin{scope}[xshift=35mm, >=stealth]\n");
printf("                  \\draw[|<->|] (0, 0) -- node[right]{\\SI{10}{\\metre}} (0,  10mm);\n");
printf("                  \\draw[<->|]  (0, 0) -- node[right]{\\SI{10}{\\metre}} (0, -10mm);\n");
printf("                \\end{scope}\n");
printf("                %% Gateway-Arch\n");
printf("                \\begin{scope}[scale=0.1, line width=0.9pt]\n");
printf("                  \\clip (-30.000, -2.000) rectangle (30.000, 18.000);\n");
printf("                  \\draw plot[smooth] coordinates\n");
printf("                  {\n");
printf("                    (-30.000,  -1.228) (-29.000,   0.001) (-28.000,   1.189)\n");
printf("                    (-27.000,   2.334) (-26.000,   3.438) (-25.000,   4.501)\n");
printf("                    (-24.000,   5.521) (-23.000,   6.500) (-22.000,   7.438)\n");
printf("                    (-21.000,   8.334) (-20.000,   9.188) (-19.000,  10.000)\n");
printf("                    (-18.000,  10.771) (-17.000,  11.500) (-16.000,  12.187)\n");
printf("                    (-15.000,  12.833) (-14.000,  13.437) (-13.000,  14.000)\n");
printf("                    (-12.000,  14.520) (-11.000,  14.999) (-10.000,  15.437)\n");
printf("                    ( -9.000,  15.833) ( -8.000,  16.187) ( -7.000,  16.499)\n");
printf("                    ( -6.000,  16.770) ( -5.000,  16.999) ( -4.000,  17.187)\n");
printf("                    ( -3.000,  17.332) ( -2.000,  17.437) ( -1.000,  17.499)\n");
printf("                    (  0.000,  17.520) (  1.000,  17.499) (  2.000,  17.437)\n");
printf("                    (  3.000,  17.332) (  4.000,  17.187) (  5.000,  16.999)\n");
printf("                    (  6.000,  16.770) (  7.000,  16.499) (  8.000,  16.187)\n");
printf("                    (  9.000,  15.833) ( 10.000,  15.437) ( 11.000,  14.999)\n");
printf("                    ( 12.000,  14.520) ( 13.000,  14.000) ( 14.000,  13.437)\n");
printf("                    ( 15.000,  12.833) ( 16.000,  12.187) ( 17.000,  11.500)\n");
printf("                    ( 18.000,  10.771) ( 19.000,  10.000) ( 20.000,   9.188)\n");
printf("                    ( 21.000,   8.334) ( 22.000,   7.438) ( 23.000,   6.500)\n");
printf("                    ( 24.000,   5.521) ( 25.000,   4.501) ( 26.000,   3.438)\n");
printf("                    ( 27.000,   2.334) ( 28.000,   1.189) ( 29.000,   0.001)\n");
printf("                    ( 30.000,  -1.228)\n");
printf("                  };\n");
printf("                \\end{scope}\n");
printf("              \\end{tikzpicture}\n");
printf("            \\end{center}\n");
printf("            Die maximale Flughöhe erhält man, indem\n");
printf("            man von der Höhe, in der der Gateway-Arch\n");
printf("            eine Breite von \\SI{38}{\\metre} besitzt,\n");
printf("            den vertikalen Sicherheitsabstand\n");
printf("            von \\SI{10}{\\metre} abzieht:\n");
printf("            \\begin{equation*}\n");
printf("              g(-19)=g(19)\\approx\\num{184.44}\n");
printf("              %%g = [-0.021 0 192.024];\n");
printf("              %%polyval(g, -19)\n");
printf("              %%polyval(g,  19)\n");
printf("              \\quad\\Rightarrow\\quad\n");
printf("              h_{\\text{max}}\\approx\\num{174.44}\n");
printf("            \\end{equation*}\n");
printf("            Wenn es der Pilot schafft, genau die Mitte\n");
printf("            des Gateway-Arch zu treffen, darf er nicht\n");
printf("            höher als \\SI{174.44}{\\metre} fliegen.\n");
printf("    \\end{enumerate}\n");
printf("    %% </OUTCOME>\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

