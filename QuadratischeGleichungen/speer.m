clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-778c2e6e9f7cb0440d8411132ce0875fabe3e6c8}\n");
printf("      {Speer}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Mithilfe der folgenden Funktion kann die Flugkurve\n");
printf("    eines Speers beschrieben werden:\n");
printf("    \\begin{equation*}\n");
printf("      h(x)=-\\frac{\\num{1}}{\\num{50}}x^{\\num{2}}+\\frac{\\num{4}}{\\num{5}}x+\\frac{\\num{9}}{\\num{5}}\n");
printf("    \\end{equation*}\n");
printf("    Alle Werte von $x$ und $h(x)$ stellen Maßzahlen in der\n");
printf("    Maßeinheit Meter dar.\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\squeeze\n");
printf("      \\item Was bedeutet $h(0)$ im Anwendungskontext?\n");
printf("      \\item Wie weit fliegt der Speer?\n");
printf("      \\item Wie hoch ist der Speer am höchsten Punkt seiner Flugbahn?\n");
printf("    \\end{enumerate}\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\n");
printf("    %% <OUTCOME>\n");
printf("    \\begin{enumerate}[a)]\n");
printf("      \\item In diesem Anwendungskontext kann $h(0)$\n");
printf("            als die Höhe interpretiert werden,\n");
printf("            in der der Speer abgeworfen wird\n");
printf("            (\\SI{1.80}{\\metre}).\n");
printf("      \\item Die Entfernung, in der der Speer wieder auf\n");
printf("            dem Boden auftrifft, entspricht der positiven\n");
printf("            Nullstelle der Funktion $h$.\n");
printf("            %%<OCTAVE>\n");
printf("            \\begingroup\n");
printf("              \\newcommand{\\vstrut}{\\vphantom{\\left(f_0^0\\right)}}%%\n");
printf("              \\newcommand{\\noeq}{\\phantom{\\Leftrightarrow}\\vstrut&\\quad}%%\n");
printf("              \\newcommand{\\iseq}{\\Leftrightarrow\\vstrut&\\quad}%%\n");
printf("              \\newcommand{\\impl}{\\Rightarrow\\vstrut&\\quad}%%\n");
printf("              \\newcommand{\\nomod}{\\quad&\\phantom{|}}%%\n");
printf("              \\newcommand{\\domod}[1]{\\quad&|#1}%%\n");
printf("              \\begin{alignat*}{3}\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                \\num{0}&=-\\frac{\\num{1}}{\\num{50}}x^{2}+\\frac{\\num{4}}{\\num{5}}x+\\frac{\\num{9}}{\\num{5}}\n");
printf("                &\n");
printf("                \\domod{:\\left(-\\frac{\\num{1}}{\\num{50}}\\right)}\n");
printf("                \\\\\n");
printf("                \\iseq\n");
printf("                &\n");
printf("                \\num{0}&=x^{2}-\\num{40}x-\\num{90}\n");
printf("                &\n");
printf("                \\domod{\\;\\text{$pq$-Formel}}\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                p&=-\\num{40}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                q&=-\\num{90}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                x_{1,2}&=-\\frac{p}{2}\\pm\\sqrt{\\left(\\frac{p}{2}\\right)^2-q}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                &=\\num{20}\\pm\\sqrt{\\left(-\\num{20}\\right)^2-\\left(-\\num{90}\\right)}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                &=\\num{20}\\pm\\sqrt{\\num{490}}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                x_1&\\approx-\\num{2.135944}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("                \\\\\n");
printf("                \\noeq\n");
printf("                &\n");
printf("                x_2&\\approx\\num{42.135944}\n");
printf("                &\n");
printf("                \\nomod\n");
printf("              \\end{alignat*}\n");
printf("            \\endgroup\n");
printf("            %%</OCTAVE>\n");
printf("            %%myqsolve(-1/50, 4/5, 9/5, 0, \"x\");\n");
printf("            Der Speer fliegt also erwa \\SI{42.14}{\\metre} weit.\n");
printf("      \\item Die maximale Flughöhe erreicht der Speer\n");
printf("            im Scheitelpunkt der Funktion $h$.\n");
printf("            \\begin{equation*}\n");
printf("              \\begin{split}\n");
printf("                h(x)&=-\\frac{\\num{1}}{\\num{50}}x^{2}+\\frac{\\num{4}}{\\num{5}}x+\\frac{\\num{9}}{\\num{5}}\n");
printf("                \\\\\n");
printf("                &=-\\frac{\\num{1}}{\\num{50}}\\cdot\\left(x^{2}-\\num{40}x-\\num{90}\\right)\n");
printf("                \\\\\n");
printf("                &=-\\frac{\\num{1}}{\\num{50}}\\cdot\\left(x^{2}-\\num{40}x+\\num{400}-\\num{400}-\\num{90}\\right)\n");
printf("                \\\\\n");
printf("                &=-\\frac{\\num{1}}{\\num{50}}\\cdot\\left(\\left(x-20\\right)^{2}-\\num{490}\\right)\n");
printf("                \\\\\n");
printf("                &=-\\frac{\\num{1}}{\\num{50}}\\cdot\\left(x-20\\right)^{2}+\\frac{\\num{49}}{\\num{5}}\n");
printf("                %%p  = [-1/50 4/5 9/5];\n");
printf("                %%ps = mypolystr(p, \"x\", [0 0 0 0 1]);\n");
printf("                %%printf(\"h(x)&=%%s\\n\", ps);\n");
printf("                %%a  = p(1);\n");
printf("                %%as = myn2s(a, 0,0,0,0,1);\n");
printf("                %%p  = 1/a .* [-1/50 4/5 9/5];\n");
printf("                %%ps = mypolystr(p, \"x\", [0 0 0 0 1]);\n");
printf("                %%printf(\"=%%s\\\\cdot\\\\left(%%s\\\\right)\\n\", as, ps);\n");
printf("              \\end{split}\n");
printf("            \\end{equation*}\n");
printf("            Nach \\SI{20}{\\metre} erreicht der Speer\n");
printf("            eine maximale Höhe von \\SI{9.80}{\\metre}.\n");
printf("    \\end{enumerate}\n");
printf("    %% </OUTCOME>\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

