clear all;

addpath 'Octave/';

printf("\\begin{exercise}\n");
printf("      {ID-25ad4aaf3aeaedcfea673f965c51157c659343f2}\n");
printf("      {Flächeninhalt}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    Wie groß ist die graue Fläche?\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}\n");
printf("        %% erste Reihe: links\n");
printf("        \\begin{scope}\n");
printf("          \\clip (-3.5, -2.2) rectangle (3.5, 2.2);\n");
printf("          \\node[below right] at (-3.5, 2.2) {a)};\n");
printf("          \\newcommand{\\radius}{1cm}%%\n");
printf("          \\filldraw[fill=white!75!black] (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\filldraw[fill=white] (-\\radius, -\\radius) circle[radius=\\radius];\n");
printf("          \\filldraw[fill=white] ( \\radius, -\\radius) circle[radius=\\radius];\n");
printf("          \\filldraw[fill=white] ( \\radius,  \\radius) circle[radius=\\radius];\n");
printf("          \\filldraw[fill=white] (-\\radius,  \\radius) circle[radius=\\radius];\n");
printf("          \\draw (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\draw[style=dotted] (\\radius, -\\radius) -- ++(0:1.6*\\radius) coordinate (U);\n");
printf("          \\draw[style=dotted] (\\radius,  \\radius) -- ++(0:1.6*\\radius) coordinate (O);\n");
printf("          \\draw[|<->|, >=latex] (U) -- node[rotate=90, below]{{\\small$a=\\sicm{8}$}} (O);\n");
printf("        \\end{scope}\n");
printf("        %% erste Reihe: rechts\n");
printf("        \\begin{scope}[xshift=8cm]\n");
printf("          \\clip (-3.5, -2.2) rectangle (3.5, 2.2);\n");
printf("          \\node[below right] at (-3.5, 2.2) {b)};\n");
printf("          \\newcommand{\\radius}{2.4cm}%%\n");
printf("          \\filldraw[fill=white!75!black] (\\radius, -0.5*\\radius) arc[start angle=0, end angle=180, radius=\\radius] -- cycle;\n");
printf("          \\filldraw[fill=white] (0, 0) circle[radius=0.5*\\radius];\n");
printf("          \\fill (0, 0) circle (0.8pt);\n");
printf("          \\draw[style=dotted] (0,       -0.5*\\radius) -- ++(270:5mm) coordinate (L);\n");
printf("          \\draw[style=dotted] (\\radius, -0.5*\\radius) -- ++(270:5mm) coordinate (R);\n");
printf("          \\draw[|<->|, >=latex] (L) -- node[below]{{\\small$r=\\sicm{6}$}} (R);\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}\n");
printf("        %% zweite Reihe: links\n");
printf("        \\begin{scope}\n");
printf("          \\clip (-3.5, -2.2) rectangle (3.5, 2.2);\n");
printf("          \\node[below right] at (-3.5, 2.2) {c)};\n");
printf("          \\newcommand{\\radius}{1.75cm}%%\n");
printf("          \\begin{scope}\n");
printf("            \\clip (-\\radius, 0) circle[radius=\\radius]; %% links\n");
printf("            \\clip (0, -\\radius) circle[radius=\\radius]; %% unten\n");
printf("            \\fill[fill=white!75!black] (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip (0, -\\radius) circle[radius=\\radius]; %% unten\n");
printf("            \\clip (\\radius, 0) circle[radius=\\radius]; %% rechts\n");
printf("            \\fill[fill=white!75!black] (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip (\\radius, 0) circle[radius=\\radius]; %% rechts\n");
printf("            \\clip (0, \\radius) circle[radius=\\radius]; %% oben\n");
printf("            \\fill[fill=white!75!black] (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip (-\\radius, 0) circle[radius=\\radius]; %% links\n");
printf("            \\clip (0, \\radius) circle[radius=\\radius]; %% oben\n");
printf("            \\fill[fill=white!75!black] (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("            \\draw (-\\radius,  0)       circle[radius=\\radius]; %% links\n");
printf("            \\draw ( 0,       -\\radius) circle[radius=\\radius]; %% unten\n");
printf("            \\draw ( \\radius,  0)       circle[radius=\\radius]; %% rechts\n");
printf("            \\draw ( 0,        \\radius) circle[radius=\\radius]; %% oben\n");
printf("          \\end{scope}\n");
printf("          \\draw (-\\radius, -\\radius) rectangle (\\radius, \\radius);\n");
printf("          \\draw[style=dotted] (\\radius,  \\radius) -- ++(0:8mm) coordinate (O);\n");
printf("          \\draw[style=dotted] (\\radius, -\\radius) -- ++(0:8mm) coordinate (U);\n");
printf("          \\draw[|<->|, >=latex] (U) -- node[rotate=90, below]{{\\small$a=\\sicm{3}$}} (O);\n");
printf("        \\end{scope}\n");
printf("        %% zweite Reihe: rechts\n");
printf("        \\begin{scope}[xshift=8cm]\n");
printf("          \\clip (-3.5, -2.2) rectangle (3.5, 2.2);\n");
printf("          \\node[below right] at (-3.5, 2.2) {d)};\n");
printf("          \\newcommand{\\radius}{2cm}%%\n");
printf("          \\begin{scope}\n");
printf("            \\clip (0, 0) circle[radius=\\radius];\n");
printf("            \\clip (225:\\radius) -- ++(315:\\radius) -- ++(45:\\radius) -- ++(135:\\radius) -- cycle;\n");
printf("            \\fill[fill=white!75!black] (0, 0) circle[radius=\\radius];\n");
printf("          \\end{scope}\n");
printf("          \\draw (0, 0) circle[radius=\\radius];\n");
printf("          \\filldraw[fill=white, join=bevel] (0, 0) -- (225:\\radius) -- (315:\\radius) -- cycle;\n");
printf("          \\fill (0, 0) circle (0.9pt);\n");
printf("          \\begin{scope}\n");
printf("            \\clip (0, 0) -- (225:\\radius) -- (315:\\radius) -- cycle;\n");
printf("            \\draw (0, 0) circle[radius=0.5cm];\n");
printf("            \\fill (270:0.28) circle[radius=0.8pt];\n");
printf("          \\end{scope}\n");
printf("          \\node[rotate=45, above=-6pt] at (215:0.5*\\radius) {{\\small$r=\\sicm{32}$}};\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}\n");
printf("        %% dritte Reihe: links\n");
printf("        \\begin{scope}\n");
printf("          \\clip (-3.5, -2.7) rectangle (3.5, 3.6);\n");
printf("          \\node[below right] at (-3.5, 3.6) {e)};\n");
printf("          \\begin{scope}\n");
printf("            \\clip (-1, 0) circle[radius=2cm];\n");
printf("            \\clip ( 1, 0) circle[radius=2cm];\n");
printf("            \\fill[fill=white!75!black] (0, 0) circle[radius=2cm];\n");
printf("          \\end{scope}\n");
printf("          \\draw (-1, 0) circle[radius=2cm];\n");
printf("          \\draw ( 1, 0) circle[radius=2cm];\n");
printf("          \\fill ( 1, 0) circle[radius=0.9pt];\n");
printf("          \\fill (-1, 0) circle[radius=0.9pt];\n");
printf("          \\draw[<->, >=latex] (1, 0) -- node[below] {{\\small$r=\\sicm{6}$}} (3, 0);\n");
printf("        \\end{scope}\n");
printf("        %% dritte Reihe: rechts\n");
printf("        \\begin{scope}[xshift=8cm]\n");
printf("          \\clip (-3.5, -2.7) rectangle (3.5, 3.6);\n");
printf("          \\node[below right] at (-3.5, 3.6) {f)};\n");
printf("          \\newcommand{\\radius}{1.75cm}%%\n");
printf("          \\begin{scope}\n");
printf("            \\clip ( 90:\\radius) circle[radius=\\radius];\n");
printf("            \\clip (210:\\radius) circle[radius=\\radius];\n");
printf("            \\fill[fill=white!75!black] (0, 0) circle[radius=\\radius];\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip (210:\\radius) circle[radius=\\radius];\n");
printf("            \\clip (330:\\radius) circle[radius=\\radius];\n");
printf("            \\fill[fill=white!75!black] (0, 0) circle[radius=\\radius];\n");
printf("          \\end{scope}\n");
printf("          \\begin{scope}\n");
printf("            \\clip ( 90:\\radius) circle[radius=\\radius];\n");
printf("            \\clip (330:\\radius) circle[radius=\\radius];\n");
printf("            \\fill[fill=white!75!black] (0, 0) circle[radius=\\radius];\n");
printf("          \\end{scope}\n");
printf("          \\draw (0, 0)        circle[radius=\\radius];\n");
printf("          \\draw ( 90:\\radius) circle[radius=\\radius];\n");
printf("          \\draw (210:\\radius) circle[radius=\\radius];\n");
printf("          \\draw (330:\\radius) circle[radius=\\radius];\n");
printf("          \\fill (0, 0)        circle[radius=0.8pt];\n");
printf("          \\fill ( 90:\\radius) circle[radius=0.8pt];\n");
printf("          \\fill (210:\\radius) circle[radius=0.8pt];\n");
printf("          \\fill (330:\\radius) circle[radius=0.8pt];\n");
printf("          \\draw[<->, >=latex] (90:\\radius) -- node[rotate=45, above] {{\\small$r=\\sicm{6}$}} ++(45:\\radius);\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("  %%\\fi\n");
printf("  %%\\ifoutcome\\outcome\\par\n");
printf("  %%\\fi\n");
printf("\\end{exercise}\n");

rmpath 'Octave/';

