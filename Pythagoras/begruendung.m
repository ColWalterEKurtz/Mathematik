clear all;

%%% addpath 'Octave/';

%%% NO CALCULATIONS YET %%%

printf("\\begin{exercise}\n");
printf("      {ID-bffd2d5cd3fb92babd1a2e0bccb21b4cd9d3139c}\n");
printf("      {Begründung}\n");
printf("  \\ifproblem\\problem\\par\n");
printf("    %% <PROBLEM>\n");
printf("    Begründe mithilfe der Abbildung, warum der Satz des Pythagoras richtig ist.\n");
printf("    \\begin{center}\n");
printf("      \\begin{tikzpicture}[scale=0.5, line width=0.6pt]\n");
printf("        %% default colors\n");
printf("        \\newcommand{\\colr}{Red};%%\n");
printf("        \\newcommand{\\colg}{ForestGreen};%%\n");
printf("        \\newcommand{\\colb}{Cerulean};%%\n");
printf("        \\newcommand{\\coly}{YellowOrange};%%\n");
printf("        \\newcommand{\\cola}{Black!35!White};%%\n");
printf("        \\newcommand{\\cole}{Black!55!White};%%\n");
printf("        \\begin{scope}\n");
printf("          \\fill[fill=\\cola] (0, 0) rectangle (3, 4);\n");
printf("          \\fill[fill=\\cola] (3, 4) rectangle (7, 7);\n");
printf("          \\draw (0, 0) rectangle (7, 7);\n");
printf("          \\draw (3, 0) -- (3, 7);\n");
printf("          \\draw (0, 4) -- (7, 4);\n");
printf("          \\draw (3, 7) -- (7, 4);\n");
printf("          \\draw (0, 4) -- (3, 0);\n");
printf("        \\end{scope}\n");
printf("        \\begin{scope}[xshift=10cm]\n");
printf("          \\filldraw[fill=\\cola] (0, 0) -- (3, 0) -- (0, 4) -- cycle;\n");
printf("          \\filldraw[fill=\\cola] (0, 4) -- (4, 7) -- (0, 7) -- cycle;\n");
printf("          \\filldraw[fill=\\cola] (3, 0) -- (7, 0) -- (7, 3) -- cycle;\n");
printf("          \\filldraw[fill=\\cola] (7, 3) -- (7, 7) -- (4, 7) -- cycle;\n");
printf("        \\end{scope}\n");
printf("      \\end{tikzpicture}\n");
printf("    \\end{center}\n");
printf("    %% </PROBLEM>\n");
printf("  \\fi\n");
printf("  %%\\ifoutline\\outline\\par\n");
printf("    %% <OUTLINE>\n");
printf("    %% </OUTLINE>\n");
printf("  %%\\fi\n");
printf("  \\ifoutcome\\outcome\n");
printf("    %% <OUTCOME>\n");
printf("    \\begin{description}\n");
printf("      \\item[Beobachtung 1:]\n");
printf("      Die Zeichnung besteht aus zwei Quadraten, und\n");
printf("      beide Quadrate sind gleich groß.\n");
printf("      \\item[Beobachtung 2:]\n");
printf("      Die vier grauen Dreiecke aus dem linken Quadrat\n");
printf("      finden sich im rechten Quadrat wieder.\n");
printf("      Sie sind dort lediglich anders angeordnet.\n");
printf("      \\item[Folgerung 1:]\n");
printf("      Die graue Fläche im linken Quadrat besitzt\n");
printf("      denselben Inhalt wie die graue Fläche im\n");
printf("      rechten Quadrat.\n");
printf("      \\item[Folgerung 2:]\n");
printf("      Wenn das linke und das rechte Quadrat dieselbe\n");
printf("      Fläche besitzen und in beiden die graue Fläche\n");
printf("      gleich groß ist, dann ist auch die weiße Fläche\n");
printf("      in beiden Quadraten gleich groß.\n");
printf("      \\item[Beobachtung 3:]\n");
printf("      Bezogen auf ein graues Dreieck stellen die weißen\n");
printf("      Flächen im linken Quadrat die Kathetenquadrate dar\n");
printf("      und die weiße Fläche im rechten Quadrat bildet das\n");
printf("      Hypotenusenquadrat eines grauen Dreiecks.\n");
printf("      \\item[Folgerung 3:]\n");
printf("      Also sind die Kathetenquadrate zusammen genau\n");
printf("      so groß wie das Hypotenusenquadrat.\n");
printf("    \\end{description}\n");
printf("    %% </OUTCOME>\n");
printf("  \\fi\n");
printf("\\end{exercise}\n");

%%% rmpath 'Octave/';

